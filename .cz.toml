# Commitizen設定ファイル
# C++、Python、その他のプロジェクトで使用可能
# conventional-commit-types (https://github.com/commitizen/conventional-commit-types) 準拠

[tool.commitizen]
name = "cz_customize"
version = "0.1.0"
tag_format = "v$version"
version_scheme = "semver2"
update_changelog_on_bump = true
major_version_zero = true

# conventional-commit-types拡張設定
[tool.commitizen.customize]
message_template = "{{change_type}}{% if scope %}({{scope}}){% endif %}{% if is_breaking_change %}!{% endif %}: {{subject}}{% if body %}\n\n{{body}}{% endif %}{% if footer %}\n\n{{footer}}{% endif %}"
example = "feat(parser): add ability to parse arrays"
schema = "<type>(<scope>): <subject>\n<BLANK LINE>\n<body>\n<BLANK LINE>\n<footer>"
schema_pattern = "^(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test)(\\([a-zA-Z0-9_-]+\\))?!?:\\s.+$"
bump_pattern = "^(BREAKING CHANGE|feat|fix)"
[tool.commitizen.customize.bump_map]
"BREAKING CHANGE" = "MAJOR"
"feat" = "MINOR"
"fix" = "PATCH"

[[tool.commitizen.customize.questions]]
type = "list"
name = "change_type"
message = "コミットの種類を選択してください"
choices = [
    {value = "feat", name = "feat: 新機能"},
    {value = "fix", name = "fix: バグ修正"},
    {value = "docs", name = "docs: ドキュメント変更"},
    {value = "style", name = "style: フォーマット変更"},
    {value = "refactor", name = "refactor: リファクタリング"},
    {value = "perf", name = "perf: パフォーマンス改善"},
    {value = "test", name = "test: テスト追加・修正"},
    {value = "build", name = "build: ビルドシステム変更"},
    {value = "ci", name = "ci: CI設定変更"},
    {value = "chore", name = "chore: その他の変更"},
    {value = "revert", name = "revert: コミット取り消し"}
]

[[tool.commitizen.customize.questions]]
type = "input"
name = "scope"
message = "スコープ (省略可):"

[[tool.commitizen.customize.questions]]
type = "input"
name = "subject"
message = "変更内容の短い説明:"

[[tool.commitizen.customize.questions]]
type = "input"
name = "body"
message = "詳細な説明 (省略可):"

[[tool.commitizen.customize.questions]]
type = "input"
name = "footer"
message = "フッター (省略可):"